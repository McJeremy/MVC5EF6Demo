<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration"/>

  </configSections>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />
  </startup>
  <connectionStrings>
    <add name="DDDTestContext" providerName="System.Data.SqlClient" connectionString="Server=xuzz\SQL;DataBase=DDDTest;uid=sa;pwd=123;"/>
  </connectionStrings>
  <!--<entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="Data Source=xuzz\SQL; Integrated Security=True; MultipleActiveResultSets=True" />
      </parameters>
    </defaultConnectionFactory>
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>-->
  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <sectionExtension type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationExtension, Microsoft.Practices.Unity.Interception.Configuration"/>
    <container>
      <extension type="Interception"/>
      <register type="TechPractise.UnityAOP.ITalk, TechPractise" mapTo="TechPractise.UnityAOP.Talk, TechPractise">
        <interceptor type="InterfaceInterceptor"/>
        <interceptionBehavior type="TechPractise.UnityAOP.CachingBehavior, TechPractise"/>
        <interceptionBehavior type="TechPractise.UnityAOP.LogBehavior, TechPractise"/>
      </register>

      <register type="JX.Domain.IRepositories.IRepositoryContext,JX.Domain.IRepositories" mapTo="JX.Infrastructure.Repositories.EntityFramework.EFRepositoryContext,JX.Infrastructure.Repositories">
        <lifetime type="singleton" />
      </register>
      
      <register type="JX.Domain.IRepositories.IUserRepository,JX.Domain.IRepositories" mapTo="JX.Infrastructure.Repositories.EntityFramework.UserRepository,JX.Infrastructure.Repositories">
      </register>

      <register type="JX.Domain.IRepositories.IRoleRepository,JX.Domain.IRepositories" mapTo="JX.Infrastructure.Repositories.EntityFramework.RoleRepository,JX.Infrastructure.Repositories">
      </register>

      <register type="JX.Domain.IRepositories.IUserRoleRepository,JX.Domain.IRepositories" mapTo="JX.Infrastructure.Repositories.EntityFramework.UserRoleRepository,JX.Infrastructure.Repositories">
      </register>

      <register type="JX.Domain.IRepositories.IBlogRepository,JX.Domain.IRepositories" mapTo="JX.Infrastructure.Repositories.EntityFramework.BlogRepository,JX.Infrastructure.Repositories">
      </register>

      <register type="JX.Domain.IRepositories.IBlogUserRepository,JX.Domain.IRepositories" mapTo="JX.Infrastructure.Repositories.EntityFramework.BlogUserRepository,JX.Infrastructure.Repositories">
      </register>

      <register type="JX.Domain.IRepositories.IBlogPostRepository,JX.Domain.IRepositories" mapTo="JX.Infrastructure.Repositories.EntityFramework.BlogPostRepository,JX.Infrastructure.Repositories">
      </register>      

      <register type="JX.Domain.IRepositories.IBlogPostAuthorRepository,JX.Domain.IRepositories" mapTo="JX.Infrastructure.Repositories.EntityFramework.BlogPostAuthorRepository,JX.Infrastructure.Repositories">
      </register>

    </container>
  </unity>

</configuration>